#!/bin/bash
#
# This script counts how often a file was committed since the given date:
#
#  42 foo/bar.txt
#  10 foo/foo.c
#   3 README
#
# Usage:
#   how-often-were-my-files-committed-since YYYY-MM-DD
#
# It may e.g. be used to roughly calculate software 'volatility charts'
# http://www.grahambrooks.com/blog/metrics-based-refactoring-for-cleaner-code/
#
# From Matthias LÃ¼dtke's https://github.com/mat/dotfiles

set -e

since_date=$1

main() {
  make_sure_we_have_a_date

  revisions |
  while read revision ; do
    files_changed_in_this_revision
  done |
  discard_empty_lines |
  aggregate_and_sort
}

function make_sure_we_have_a_date {
  if [ -z "$since_date" ]; then
    echo "example usage: $0 2011-03-15"
    exit $E_BADARGS
  fi
}

function revisions {
  git rev-list master --since="$since_date"
}

function files_changed_in_this_revision {
  git show --pretty="format:" --name-only $revision
}

function discard_empty_lines {
  egrep -v "^$"
}

function aggregate_and_sort {
  sort | uniq -c | sort -nr
}

main
